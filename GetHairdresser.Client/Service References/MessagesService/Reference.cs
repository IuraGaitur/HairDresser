//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetHairdresser.Client.MessagesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessagesService.IMessagesService")]
    public interface IMessagesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/AddMessage", ReplyAction="http://tempuri.org/IMessagesService/AddMessageResponse")]
        bool AddMessage(GetHairDresser.Common.Entities.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/AddMessage", ReplyAction="http://tempuri.org/IMessagesService/AddMessageResponse")]
        System.Threading.Tasks.Task<bool> AddMessageAsync(GetHairDresser.Common.Entities.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/EditMessage", ReplyAction="http://tempuri.org/IMessagesService/EditMessageResponse")]
        bool EditMessage(GetHairDresser.Common.Entities.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/EditMessage", ReplyAction="http://tempuri.org/IMessagesService/EditMessageResponse")]
        System.Threading.Tasks.Task<bool> EditMessageAsync(GetHairDresser.Common.Entities.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/DeleteMessage", ReplyAction="http://tempuri.org/IMessagesService/DeleteMessageResponse")]
        bool DeleteMessage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/DeleteMessage", ReplyAction="http://tempuri.org/IMessagesService/DeleteMessageResponse")]
        System.Threading.Tasks.Task<bool> DeleteMessageAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/GetListMessagesForUser", ReplyAction="http://tempuri.org/IMessagesService/GetListMessagesForUserResponse")]
        GetHairDresser.Common.Entities.Message[] GetListMessagesForUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessagesService/GetListMessagesForUser", ReplyAction="http://tempuri.org/IMessagesService/GetListMessagesForUserResponse")]
        System.Threading.Tasks.Task<GetHairDresser.Common.Entities.Message[]> GetListMessagesForUserAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessagesServiceChannel : GetHairdresser.Client.MessagesService.IMessagesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessagesServiceClient : System.ServiceModel.ClientBase<GetHairdresser.Client.MessagesService.IMessagesService>, GetHairdresser.Client.MessagesService.IMessagesService {
        
        public MessagesServiceClient() {
        }
        
        public MessagesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessagesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessagesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessagesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddMessage(GetHairDresser.Common.Entities.Message message) {
            return base.Channel.AddMessage(message);
        }
        
        public System.Threading.Tasks.Task<bool> AddMessageAsync(GetHairDresser.Common.Entities.Message message) {
            return base.Channel.AddMessageAsync(message);
        }
        
        public bool EditMessage(GetHairDresser.Common.Entities.Message message) {
            return base.Channel.EditMessage(message);
        }
        
        public System.Threading.Tasks.Task<bool> EditMessageAsync(GetHairDresser.Common.Entities.Message message) {
            return base.Channel.EditMessageAsync(message);
        }
        
        public bool DeleteMessage(int id) {
            return base.Channel.DeleteMessage(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteMessageAsync(int id) {
            return base.Channel.DeleteMessageAsync(id);
        }
        
        public GetHairDresser.Common.Entities.Message[] GetListMessagesForUser(int id) {
            return base.Channel.GetListMessagesForUser(id);
        }
        
        public System.Threading.Tasks.Task<GetHairDresser.Common.Entities.Message[]> GetListMessagesForUserAsync(int id) {
            return base.Channel.GetListMessagesForUserAsync(id);
        }
    }
}
