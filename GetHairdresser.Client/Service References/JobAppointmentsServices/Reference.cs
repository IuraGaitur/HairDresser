//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetHairdresser.Client.JobAppointmentsServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobAppointment", Namespace="http://schemas.datacontract.org/2004/07/GetHairDresser.Common")]
    [System.SerializableAttribute()]
    public partial class JobAppointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GetHairdresser.Client.JobAppointmentsServices.User HairdresserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan HourJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JobAppIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateJob {
            get {
                return this.DateJobField;
            }
            set {
                if ((this.DateJobField.Equals(value) != true)) {
                    this.DateJobField = value;
                    this.RaisePropertyChanged("DateJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GetHairdresser.Client.JobAppointmentsServices.User Hairdresser {
            get {
                return this.HairdresserField;
            }
            set {
                if ((object.ReferenceEquals(this.HairdresserField, value) != true)) {
                    this.HairdresserField = value;
                    this.RaisePropertyChanged("Hairdresser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan HourJob {
            get {
                return this.HourJobField;
            }
            set {
                if ((this.HourJobField.Equals(value) != true)) {
                    this.HourJobField = value;
                    this.RaisePropertyChanged("HourJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobAppID {
            get {
                return this.JobAppIDField;
            }
            set {
                if ((this.JobAppIDField.Equals(value) != true)) {
                    this.JobAppIDField = value;
                    this.RaisePropertyChanged("JobAppID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/GetHairDresser.Common")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] JobAppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserFacebookField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeClientField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] JobAppointments {
            get {
                return this.JobAppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobAppointmentsField, value) != true)) {
                    this.JobAppointmentsField = value;
                    this.RaisePropertyChanged("JobAppointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserFacebook {
            get {
                return this.UserFacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.UserFacebookField, value) != true)) {
                    this.UserFacebookField = value;
                    this.RaisePropertyChanged("UserFacebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string location {
            get {
                return this.locationField;
            }
            set {
                if ((object.ReferenceEquals(this.locationField, value) != true)) {
                    this.locationField = value;
                    this.RaisePropertyChanged("location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string typeClient {
            get {
                return this.typeClientField;
            }
            set {
                if ((object.ReferenceEquals(this.typeClientField, value) != true)) {
                    this.typeClientField = value;
                    this.RaisePropertyChanged("typeClient");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobAppointmentsServices.IJobAppointmentsService")]
    public interface IJobAppointmentsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/AddJobAppointment", ReplyAction="http://tempuri.org/IJobAppointmentsService/AddJobAppointmentResponse")]
        bool AddJobAppointment(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/AddJobAppointment", ReplyAction="http://tempuri.org/IJobAppointmentsService/AddJobAppointmentResponse")]
        System.Threading.Tasks.Task<bool> AddJobAppointmentAsync(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/EditJobAppointment", ReplyAction="http://tempuri.org/IJobAppointmentsService/EditJobAppointmentResponse")]
        bool EditJobAppointment(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/EditJobAppointment", ReplyAction="http://tempuri.org/IJobAppointmentsService/EditJobAppointmentResponse")]
        System.Threading.Tasks.Task<bool> EditJobAppointmentAsync(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/DeleteJobAppointment", ReplyAction="http://tempuri.org/IJobAppointmentsService/DeleteJobAppointmentResponse")]
        bool DeleteJobAppointment(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/DeleteJobAppointment", ReplyAction="http://tempuri.org/IJobAppointmentsService/DeleteJobAppointmentResponse")]
        System.Threading.Tasks.Task<bool> DeleteJobAppointmentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/GetJobAppointmentsByDate", ReplyAction="http://tempuri.org/IJobAppointmentsService/GetJobAppointmentsByDateResponse")]
        GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] GetJobAppointmentsByDate(GetHairdresser.Client.JobAppointmentsServices.User user, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/GetJobAppointmentsByDate", ReplyAction="http://tempuri.org/IJobAppointmentsService/GetJobAppointmentsByDateResponse")]
        System.Threading.Tasks.Task<GetHairdresser.Client.JobAppointmentsServices.JobAppointment[]> GetJobAppointmentsByDateAsync(GetHairdresser.Client.JobAppointmentsServices.User user, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/GetJobAppointments", ReplyAction="http://tempuri.org/IJobAppointmentsService/GetJobAppointmentsResponse")]
        GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] GetJobAppointments(GetHairdresser.Client.JobAppointmentsServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/GetJobAppointments", ReplyAction="http://tempuri.org/IJobAppointmentsService/GetJobAppointmentsResponse")]
        System.Threading.Tasks.Task<GetHairdresser.Client.JobAppointmentsServices.JobAppointment[]> GetJobAppointmentsAsync(GetHairdresser.Client.JobAppointmentsServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/GetTypedJobAppointmentsByDate", ReplyAction="http://tempuri.org/IJobAppointmentsService/GetTypedJobAppointmentsByDateResponse")]
        GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] GetTypedJobAppointmentsByDate(GetHairdresser.Client.JobAppointmentsServices.User user, int status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobAppointmentsService/GetTypedJobAppointmentsByDate", ReplyAction="http://tempuri.org/IJobAppointmentsService/GetTypedJobAppointmentsByDateResponse")]
        System.Threading.Tasks.Task<GetHairdresser.Client.JobAppointmentsServices.JobAppointment[]> GetTypedJobAppointmentsByDateAsync(GetHairdresser.Client.JobAppointmentsServices.User user, int status);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobAppointmentsServiceChannel : GetHairdresser.Client.JobAppointmentsServices.IJobAppointmentsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobAppointmentsServiceClient : System.ServiceModel.ClientBase<GetHairdresser.Client.JobAppointmentsServices.IJobAppointmentsService>, GetHairdresser.Client.JobAppointmentsServices.IJobAppointmentsService {
        
        public JobAppointmentsServiceClient() {
        }
        
        public JobAppointmentsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobAppointmentsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobAppointmentsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobAppointmentsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddJobAppointment(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp) {
            return base.Channel.AddJobAppointment(jobapp);
        }
        
        public System.Threading.Tasks.Task<bool> AddJobAppointmentAsync(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp) {
            return base.Channel.AddJobAppointmentAsync(jobapp);
        }
        
        public bool EditJobAppointment(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp) {
            return base.Channel.EditJobAppointment(jobapp);
        }
        
        public System.Threading.Tasks.Task<bool> EditJobAppointmentAsync(GetHairdresser.Client.JobAppointmentsServices.JobAppointment jobapp) {
            return base.Channel.EditJobAppointmentAsync(jobapp);
        }
        
        public bool DeleteJobAppointment(int id) {
            return base.Channel.DeleteJobAppointment(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteJobAppointmentAsync(int id) {
            return base.Channel.DeleteJobAppointmentAsync(id);
        }
        
        public GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] GetJobAppointmentsByDate(GetHairdresser.Client.JobAppointmentsServices.User user, System.DateTime date) {
            return base.Channel.GetJobAppointmentsByDate(user, date);
        }
        
        public System.Threading.Tasks.Task<GetHairdresser.Client.JobAppointmentsServices.JobAppointment[]> GetJobAppointmentsByDateAsync(GetHairdresser.Client.JobAppointmentsServices.User user, System.DateTime date) {
            return base.Channel.GetJobAppointmentsByDateAsync(user, date);
        }
        
        public GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] GetJobAppointments(GetHairdresser.Client.JobAppointmentsServices.User user) {
            return base.Channel.GetJobAppointments(user);
        }
        
        public System.Threading.Tasks.Task<GetHairdresser.Client.JobAppointmentsServices.JobAppointment[]> GetJobAppointmentsAsync(GetHairdresser.Client.JobAppointmentsServices.User user) {
            return base.Channel.GetJobAppointmentsAsync(user);
        }
        
        public GetHairdresser.Client.JobAppointmentsServices.JobAppointment[] GetTypedJobAppointmentsByDate(GetHairdresser.Client.JobAppointmentsServices.User user, int status) {
            return base.Channel.GetTypedJobAppointmentsByDate(user, status);
        }
        
        public System.Threading.Tasks.Task<GetHairdresser.Client.JobAppointmentsServices.JobAppointment[]> GetTypedJobAppointmentsByDateAsync(GetHairdresser.Client.JobAppointmentsServices.User user, int status) {
            return base.Channel.GetTypedJobAppointmentsByDateAsync(user, status);
        }
    }
}
