//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GetHairdresser.Client.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        bool Login(GetHairDresser.Common.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<bool> LoginAsync(GetHairDresser.Common.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Register", ReplyAction="http://tempuri.org/IUserService/RegisterResponse")]
        bool Register(GetHairDresser.Common.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Register", ReplyAction="http://tempuri.org/IUserService/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(GetHairDresser.Common.User u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserData", ReplyAction="http://tempuri.org/IUserService/GetUserDataResponse")]
        GetHairDresser.Common.User GetUserData(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserData", ReplyAction="http://tempuri.org/IUserService/GetUserDataResponse")]
        System.Threading.Tasks.Task<GetHairDresser.Common.User> GetUserDataAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserDataByFacebook", ReplyAction="http://tempuri.org/IUserService/GetUserDataByFacebookResponse")]
        GetHairDresser.Common.User GetUserDataByFacebook(string facebookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserDataByFacebook", ReplyAction="http://tempuri.org/IUserService/GetUserDataByFacebookResponse")]
        System.Threading.Tasks.Task<GetHairDresser.Common.User> GetUserDataByFacebookAsync(string facebookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditData", ReplyAction="http://tempuri.org/IUserService/EditDataResponse")]
        bool EditData(GetHairDresser.Common.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/EditData", ReplyAction="http://tempuri.org/IUserService/EditDataResponse")]
        System.Threading.Tasks.Task<bool> EditDataAsync(GetHairDresser.Common.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserType", ReplyAction="http://tempuri.org/IUserService/GetUserTypeResponse")]
        string GetUserType(GetHairDresser.Common.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserType", ReplyAction="http://tempuri.org/IUserService/GetUserTypeResponse")]
        System.Threading.Tasks.Task<string> GetUserTypeAsync(GetHairDresser.Common.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetUserType", ReplyAction="http://tempuri.org/IUserService/SetUserTypeResponse")]
        bool SetUserType(GetHairDresser.Common.User user, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SetUserType", ReplyAction="http://tempuri.org/IUserService/SetUserTypeResponse")]
        System.Threading.Tasks.Task<bool> SetUserTypeAsync(GetHairDresser.Common.User user, string userType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllHairdress", ReplyAction="http://tempuri.org/IUserService/GetAllHairdressResponse")]
        GetHairDresser.Common.User[] GetAllHairdress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllHairdress", ReplyAction="http://tempuri.org/IUserService/GetAllHairdressResponse")]
        System.Threading.Tasks.Task<GetHairDresser.Common.User[]> GetAllHairdressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllHaidressLocation", ReplyAction="http://tempuri.org/IUserService/GetAllHaidressLocationResponse")]
        GetHairDresser.Common.User[] GetAllHaidressLocation(string location);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetAllHaidressLocation", ReplyAction="http://tempuri.org/IUserService/GetAllHaidressLocationResponse")]
        System.Threading.Tasks.Task<GetHairDresser.Common.User[]> GetAllHaidressLocationAsync(string location);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : GetHairdresser.Client.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<GetHairdresser.Client.UserService.IUserService>, GetHairdresser.Client.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Login(GetHairDresser.Common.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<bool> LoginAsync(GetHairDresser.Common.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public bool Register(GetHairDresser.Common.User u) {
            return base.Channel.Register(u);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(GetHairDresser.Common.User u) {
            return base.Channel.RegisterAsync(u);
        }
        
        public GetHairDresser.Common.User GetUserData(System.Guid id) {
            return base.Channel.GetUserData(id);
        }
        
        public System.Threading.Tasks.Task<GetHairDresser.Common.User> GetUserDataAsync(System.Guid id) {
            return base.Channel.GetUserDataAsync(id);
        }
        
        public GetHairDresser.Common.User GetUserDataByFacebook(string facebookId) {
            return base.Channel.GetUserDataByFacebook(facebookId);
        }
        
        public System.Threading.Tasks.Task<GetHairDresser.Common.User> GetUserDataByFacebookAsync(string facebookId) {
            return base.Channel.GetUserDataByFacebookAsync(facebookId);
        }
        
        public bool EditData(GetHairDresser.Common.User user) {
            return base.Channel.EditData(user);
        }
        
        public System.Threading.Tasks.Task<bool> EditDataAsync(GetHairDresser.Common.User user) {
            return base.Channel.EditDataAsync(user);
        }
        
        public string GetUserType(GetHairDresser.Common.User user) {
            return base.Channel.GetUserType(user);
        }
        
        public System.Threading.Tasks.Task<string> GetUserTypeAsync(GetHairDresser.Common.User user) {
            return base.Channel.GetUserTypeAsync(user);
        }
        
        public bool SetUserType(GetHairDresser.Common.User user, string userType) {
            return base.Channel.SetUserType(user, userType);
        }
        
        public System.Threading.Tasks.Task<bool> SetUserTypeAsync(GetHairDresser.Common.User user, string userType) {
            return base.Channel.SetUserTypeAsync(user, userType);
        }
        
        public GetHairDresser.Common.User[] GetAllHairdress() {
            return base.Channel.GetAllHairdress();
        }
        
        public System.Threading.Tasks.Task<GetHairDresser.Common.User[]> GetAllHairdressAsync() {
            return base.Channel.GetAllHairdressAsync();
        }
        
        public GetHairDresser.Common.User[] GetAllHaidressLocation(string location) {
            return base.Channel.GetAllHaidressLocation(location);
        }
        
        public System.Threading.Tasks.Task<GetHairDresser.Common.User[]> GetAllHaidressLocationAsync(string location) {
            return base.Channel.GetAllHaidressLocationAsync(location);
        }
    }
}
